use siyi_protocol::zt30_tcp::*;

fn main() {
    // Each message is a byte slice representing a full SIYI protocol frame
    let messages: &[&[u8]] = &[
        // Zoom +
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x05, 0x01, 0x8d, 0x64,
        ],
        // Zoom -
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x05, 0xFF, 0x5c, 0x6a,
        ],
        // Absolute Zoom (4.5x)
        &[
            0x55, 0x66, 0x01, 0x02, 0x00, 0x01, 0x00, 0x0F, 0x04, 0x05, 0x60, 0xBB,
        ],
        // Focus +
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x06, 0x01, 0xDE, 0x31,
        ],
        // Focus -
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x06, 0xFF, 0x0F, 0x3F,
        ],
        // Take Photo
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x34, 0xCE,
        ],
        // Start Video Recording
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x02, 0x76, 0xEE,
        ],
        // Lock Mode
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x03, 0x57, 0xFE,
        ],
        // Follow Mode
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x04, 0xB0, 0x8E,
        ],
        // FPV Mode
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x05, 0x91, 0x9E,
        ],
        // Pan/Tilt 100,100
        &[
            0x55, 0x66, 0x01, 0x02, 0x00, 0x00, 0x00, 0x07, 0x64, 0x64, 0x3D, 0xCF,
        ],
        // Auto Focus
        &[
            0x55, 0x66, 0x01, 0x05, 0x00, 0x00, 0x00, 0x04, 0x01, 0x2C, 0x01, 0x64, 0x00, 0x1F,
            0x8A,
        ],
        // One-Key Centering
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x08, 0x01, 0xD1, 0x12,
        ],
        // Retrieve Hardware ID
        &[0x55, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x02, 0x07, 0xF4],
        // Retrieve Firmware Version
        &[0x55, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x64, 0xC4],
        // Retrieve Gimbal Status
        &[0x55, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x0F, 0x75],
        // Retrieve Current Zoom Value
        &[0x55, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x18, 0x7C, 0x47],
        // Retrieve Current Gimbal Mode
        &[0x55, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x19, 0x5D, 0x57],
        // Retrieve Pseudo-Color Settings
        &[0x55, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x3E, 0x67],
        // Set Pseudo-Color Mode (Iron Red)
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1B, 0x03, 0xB3, 0x64,
        ],
        // Set Gimbal Control Angle (-90째,0째)
        &[
            0x55, 0x66, 0x01, 0x04, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x7C, 0xFC, 0x4F, 0xA4,
        ],
        // Retrieve Maximum Zoom Value
        &[0x55, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x16, 0xB2, 0xA6],
        // Retrieve Single Frame Raw Thermal Imaging Data
        &[0x55, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x35, 0xB3, 0xB2],
        // Retrieve Maximum/Minimum Temperature of Entire Image
        &[
            0x55, 0x66, 0x01, 0x01, 0x00, 0x00, 0x00, 0x14, 0x01, 0xCF, 0x54,
        ],
        // Send GPS Coordinates (Longitude 22.27683째E, Latitude 114.17612째N)
        &[
            0x55, 0x66, 0x01, 0x20, 0x00, 0x01, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0xAC, 0x2C,
            0x47, 0x0D, 0xB0, 0xE4, 0x0D, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x62,
        ],
    ];

    for msg in messages {
        println!("{:?}", decode_message(msg));
    }
}
